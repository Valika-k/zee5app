package com.zee.zee5app.repository;
import com.zee.zee5app.dto.Register;

public class UserRepository {
	//private Register[] register=new Register[10];
	private Register[] registers=new Register[10];
	private static int count=-1;
	private UserRepository() {
		//TODO autogenerated constructor stub
	}
	
	//add new user
	public String addUser(Register register) {
		//registers.length => gives us the availability
		
		if(count==registers.length-1)
		{
			Register temp[]=new Register[registers.length*2];
			//add old contents to new
			System.arraycopy(registers,0,temp,0,registers.length);
			registers=temp;
			registers[++count]=register;
			return "array is full";
		}
		registers[++count]=register;
		return "success";
		
		
	}
	
	//return user details by id
	public Register getUserById(String Id) {
		//we need to traverse array
		for(Register register : registers) {
			if(register!=null && register.getId().equals(Id)  ) {
				return register;
			}
		}
		return null;
	}
	
	//return all user details
	public Register[] getAllUsers() {
		return registers;
	}
	
	public String updateUser(String id, Register register)
	{
		
		int counter=-1;

		for(Register register1 : registers) {
			++counter;
			if(register1!=null && register1.getId().equals(id)  ) {
				registers[counter].setFirstname(register.getFirstname());
				registers[counter].setLastname(register.getLastname());
				//registers[counter].setEmail(register.getEmail());
				//registers[counter].setPassword(register.getPassword());
				
			}
		}
		return "Users updated";
	}
	
	public String deleteUser(String id)
	{
	
		int counter=-1;
		for(Register register : registers) {
			
			++counter;
			if(register!=null && register.getId().equals(id)  ) {
					Register rem= register;
					for(int i=counter;i<registers.length;i++) {
						registers[i]=registers[i+1];
					}
					
			}
			return "deleted "+id ;
		}
		return null;
	}
	
	
	
	
	private static UserRepository userRepository;
	public static UserRepository getInstance()
	{
		if(userRepository==null)
			userRepository=new UserRepository();
		return userRepository;
	}
}
